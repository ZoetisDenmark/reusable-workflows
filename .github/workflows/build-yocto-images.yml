name: "worflow-experiments"

env:
  VF1: None

on:
  push:

jobs:
  BuildImage:
    name: Build Yocto image

    defaults:
      run:
        shell: bash

    runs-on: [Yocto, self-hosted]

    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - uses: actions/checkout@v3
      - id: add-variable
        run: printf "VAR=I AM MY_VARIABLE" >> "$GITHUB_OUTPUT"
      - run: echo "Written down... ${{ steps.add-variable.outputs.VAR }}"
      - id: add-non-variable-to-stderr
        run: python -c 'import os; os.write(2, b"error\n")' >> "$GITHUB_OUTPUT"
      - run: echo "Written down (bis)... ${{ steps.add-variable.outputs.VAR }}"
      - id: add-multiple-variables
        run: |
          # Adding 1st variable in the multi-variable set
          printf "VAR1=I AM MY_VARIABLE 1\n" >> "$GITHUB_OUTPUT"
          # Adding 2nd variable independently
          echo "VAR2=I AM VARIABLE 2" >> "$GITHUB_OUTPUT"
          # Adding 3th and 4th variables jointly
          printf "VAR3=I AM VARIABLE 3\nVAR4=I AM VARIABLE 4\n" >> "$GITHUB_OUTPUT"
      - run: |
          echo "VAR1: ${{ steps.add-multiple-variables.outputs.VAR1 }}"
          echo "VAR2: ${{ steps.add-multiple-variables.outputs.VAR2 }}"
          echo "VAR3: ${{ steps.add-multiple-variables.outputs.VAR3 }}"
          echo "VAR4: ${{ steps.add-multiple-variables.outputs.VAR4 }}"
          echo "VAR: ${{ steps.add-variable.outputs.VAR }}"
      - id: scripted-variable-addition
        run: ./variable-feeder.py >> "$GITHUB_OUTPUT"
      - run: |
          echo "VF1: ${{ steps.scripted-variable-addition.outputs.VF1 }}"
          echo "VF2: ${{ steps.scripted-variable-addition.outputs.VF2 }}"
          echo "VF_ERR: ${{ steps.scripted-variable-addition.outputs.VF_ERR }}"
          echo "VF_MSG: ${{ steps.scripted-variable-addition.outputs.VF_MSG }}"
      # Testing default environment variable
      - run: |
          echo "VF1: ${{ env.VF1 }} (default)"
      # Same as 'scripted-variable-addition', but using environment variables
      - run: ./variable-feeder.py >> "$GITHUB_ENV"
      - run: |
          echo "::notice ::Setting the Python script return values to GHA ENV variables."
          echo "VF1: ${{ env.VF1 }}"
          echo "VF2: ${{ env.VF2 }}"
          echo "VF_ERR: ${{ env.VF_ERR }}"
          echo "VF_MSG: ${{ env.VF_MSG }}"
